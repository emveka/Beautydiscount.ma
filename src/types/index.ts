// types/index.ts - VERSION UNIFI√âE ET CORRIG√âE

import { Timestamp } from 'firebase/firestore';

/**
 * ‚úÖ Interface principale pour les produits - VERSION CORRIG√âE
 * Structure compatible avec Firebase + Analytics + Pages
 */
export interface Product {
  id: string;
  slug: string;
  name: string;
  brand: string;
  // ‚úÖ CORRECTION : categories optionnel avec subcategory optionnel
  categories?: Array<{
    category: string;
    subcategory?: string;
  }>;
  // ‚úÖ CORRECTION : price obligatoire (utilis√© partout dans l'app)
  price: number;
  originalPrice?: number;
  discount?: number;
  prixAchat?: number;
  title?: string;
  shortSEOdescription?: string;
  longSEOdescription?: string;
  shortDescription?: string;
  images?: string[];
  mainImage?: string;
  // ‚úÖ CORRECTION : inStock obligatoire (utilis√© dans la logique m√©tier)
  inStock: boolean;
  quantity?: number;
  sku?: string;
  codeBarre?: string;
  contenance?: string;
  specifications?: Record<string, unknown>; // ‚úÖ unknown au lieu de string pour plus de flexibilit√©
  featured?: boolean;
  canonicalPath?: string; // ‚úÖ CORRECTION : optionnel
  createdAt?: Timestamp;
  updatedAt?: Timestamp;
}

/**
 * ‚úÖ Interface pour les produits s√©rialis√©s (pour Server/Client Components)
 * Version sans Timestamps Firebase pour √©viter les erreurs de s√©rialisation
 */
export interface SerializedProduct {
  id: string;
  slug: string;
  name: string;
  brand: string;
  categories?: Array<{
    category: string;
    subcategory?: string;
  }>;
  price: number;
  originalPrice?: number;
  discount?: number;
  prixAchat?: number;
  title?: string;
  shortSEOdescription?: string;
  longSEOdescription?: string;
  shortDescription?: string;
  images?: string[];
  mainImage?: string;
  inStock: boolean;
  quantity?: number;
  sku?: string;
  codeBarre?: string;
  contenance?: string;
  specifications?: Record<string, unknown>;
  featured?: boolean;
  canonicalPath?: string;
  // ‚úÖ Timestamps s√©rialis√©s en strings
  createdAt?: string;
  updatedAt?: string;
}

/**
 * ‚úÖ Interface pour les cat√©gories - VERSION CORRIG√âE
 */
export interface Category {
  id: string;
  name: string;
  title: string;
  slug: string;
  shortSEOdescription: string;
  longSEOdescription: string;
  subcategories?: string[];
  imageUrl?: string;
  mainImage?: string;
  createdAt?: Timestamp;
  updatedAt?: Timestamp;
}

/**
 * ‚úÖ Interface pour les cat√©gories s√©rialis√©es
 */
export interface SerializedCategory {
  id: string;
  name: string;
  title: string;
  slug: string;
  shortSEOdescription: string;
  longSEOdescription: string;
  subcategories?: string[];
  imageUrl?: string;
  mainImage?: string;
  createdAt?: string;
  updatedAt?: string;
}

/**
 * ‚úÖ Interface pour les sous-cat√©gories - VERSION CORRIG√âE
 */
export interface Subcategory {
  id: string;
  name: string;
  title: string;
  slug: string;
  shortSEOdescription: string;
  longSEOdescription: string;
  parentCategory: string;
  createdAt?: Timestamp;
  updatedAt?: Timestamp;
}

/**
 * ‚úÖ Interface pour les sous-cat√©gories s√©rialis√©es
 */
export interface SerializedSubcategory {
  id: string;
  name: string;
  title: string;
  slug: string;
  shortSEOdescription: string;
  longSEOdescription: string;
  parentCategory: string;
  createdAt?: string;
  updatedAt?: string;
}

/**
 * ‚úÖ Interface pour les √©l√©ments du panier - VERSION CORRIG√âE ET COMPL√àTE
 */
export interface CartItem {
  productId: string;
  name: string;
  brand: string;
  price: number;
  originalPrice?: number; // ‚úÖ AJOUT√â : pour afficher les promotions
  imageUrl: string;
  slug: string; // ‚úÖ AJOUT√â : pour la navigation
  quantity: number;
  inStock: boolean; // ‚úÖ AJOUT√â : pour la validation
}

/**
 * ‚úÖ Interface pour les produits similaires (version simplifi√©e) - CORRIG√âE
 */
export interface SimilarProduct {
  id: string;
  name: string;
  brand: string;
  price: number;
  mainImage: string;
  slug: string;
}

/**
 * ‚úÖ Interface pour la structure des cat√©gories dans les produits - CORRIG√âE
 */
export interface CategoryItem {
  category: string;
  subcategory?: string; // ‚úÖ CORRECTION : optionnel
}

/**
 * ‚úÖ Interface pour les options de filtres - CORRIG√âE
 */
export interface FilterOptions {
  brands: string[];
  priceRanges: Array<{
    label: string;
    min: number;
    max: number;
  }>;
  subcategories: SerializedSubcategory[]; // ‚úÖ CORRECTION : utilise le type s√©rialis√©
}

/**
 * ‚úÖ Interface pour les m√©tadonn√©es de page
 */
export interface PageMetadata {
  title: string;
  description: string;
  keywords?: string[];
  canonicalUrl?: string;
  ogImage?: string;
}

/**
 * ‚úÖ Types utilitaires
 */
export type ProductStatus = 'draft' | 'published' | 'archived';
export type StockStatus = 'in_stock' | 'out_of_stock' | 'low_stock';
export type OrderStatus = 'pending' | 'confirmed' | 'shipped' | 'delivered' | 'cancelled';

/**
 * ‚úÖ Interface pour les avis clients
 */
export interface Review {
  id: string;
  productId: string;
  customerName: string;
  rating: number;
  comment: string;
  verified: boolean;
  createdAt: Timestamp;
}

/**
 * ‚úÖ Interface pour les commandes - CORRIG√âE
 */
export interface Order {
  id: string;
  customerEmail: string;
  customerPhone: string;
  customerName: string;
  items: CartItem[];
  totalAmount: number;
  status: OrderStatus;
  shippingAddress: {
    street: string;
    city: string;
    postalCode: string;
    country: string;
  };
  createdAt: Timestamp;
  updatedAt?: Timestamp;
}

/**
 * ‚úÖ Interface pour les banni√®res/promotions
 */
export interface Banner {
  id: string;
  title: string;
  subtitle?: string;
  imageUrl: string;
  linkUrl?: string;
  isActive: boolean;
  order: number;
  createdAt: Timestamp;
  updatedAt?: Timestamp;
}

/**
 * üéØ TYPES POUR ANALYTICS - ALIGN√âS AVEC LE COMPOSANT ANALYTICS
 */

/**
 * ‚úÖ Interface pour les produits dans Analytics (compatible avec trackEcommerce)
 */
export interface AnalyticsProduct {
  productId: string;
  name: string;
  brand: string;
  categories?: Array<{ category: string; subcategory?: string }>;
  price: number;
}

/**
 * ‚úÖ Interface pour les √©l√©ments du panier dans Analytics
 */
export interface AnalyticsCartItem {
  productId: string;
  name: string;
  brand: string;
  categories?: Array<{ category: string; subcategory?: string }>;
  price: number;
  quantity: number;
}

/**
 * üõ†Ô∏è FONCTIONS UTILITAIRES DE CONVERSION
 */

/**
 * ‚úÖ Convertit un Product en AnalyticsProduct
 */
export function toAnalyticsProduct(product: Product | SerializedProduct): AnalyticsProduct {
  return {
    productId: product.id,
    name: product.name,
    brand: product.brand,
    categories: product.categories || [],
    price: product.price
  };
}

/**
 * ‚úÖ Convertit un CartItem en AnalyticsCartItem
 */
export function toAnalyticsCartItem(cartItem: CartItem): AnalyticsCartItem {
  return {
    productId: cartItem.productId,
    name: cartItem.name,
    brand: cartItem.brand,
    categories: [], // Les CartItems n'ont pas de categories, on peut les r√©cup√©rer si besoin
    price: cartItem.price,
    quantity: cartItem.quantity
  };
}

/**
 * ‚úÖ S√©rialise un Product Firebase en SerializedProduct
 */
export function serializeProduct(product: Product): SerializedProduct {
  return {
    ...product,
    createdAt: product.createdAt?.toDate?.()?.toISOString?.(),
    updatedAt: product.updatedAt?.toDate?.()?.toISOString?.()
  };
}

/**
 * ‚úÖ S√©rialise une Category Firebase en SerializedCategory
 */
export function serializeCategory(category: Category): SerializedCategory {
  return {
    ...category,
    createdAt: category.createdAt?.toDate?.()?.toISOString?.(),
    updatedAt: category.updatedAt?.toDate?.()?.toISOString?.()
  };
}

/**
 * ‚úÖ S√©rialise une Subcategory Firebase en SerializedSubcategory
 */
export function serializeSubcategory(subcategory: Subcategory): SerializedSubcategory {
  return {
    ...subcategory,
    createdAt: subcategory.createdAt?.toDate?.()?.toISOString?.(),
    updatedAt: subcategory.updatedAt?.toDate?.()?.toISOString?.()
  };
}